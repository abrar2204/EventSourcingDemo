// <auto-generated />
using System;
using EventSourcingDemo.Persistence;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace EventSourcingDemo.Migrations
{
    [DbContext(typeof(EventSourcingDemoDbContext))]
    partial class EventSourcingDemoDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("EventSourcingDemo.Entities.EventStore", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("text");

                    b.Property<Guid>("AggregateIdentifier")
                        .HasColumnType("uuid");

                    b.Property<string>("EventData")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("EventType")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("Version")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.ToTable("EventStore");
                });

            modelBuilder.Entity("EventSourcingDemo.Entities.Pokemon", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("text");

                    b.Property<int>("Level")
                        .HasColumnType("integer");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Pokemons");
                });

            modelBuilder.Entity("EventSourcingDemo.Entities.PokemonAttack", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("PokemonAttacks");
                });

            modelBuilder.Entity("EventSourcingDemo.Entities.PokemonType", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("PokemonTypes");
                });

            modelBuilder.Entity("PokemonPokemonAttack", b =>
                {
                    b.Property<string>("AttacksId")
                        .HasColumnType("text");

                    b.Property<string>("PokemonsId")
                        .HasColumnType("text");

                    b.HasKey("AttacksId", "PokemonsId");

                    b.HasIndex("PokemonsId");

                    b.ToTable("PokemonPokemonAttack");
                });

            modelBuilder.Entity("PokemonPokemonType", b =>
                {
                    b.Property<string>("PokemonsId")
                        .HasColumnType("text");

                    b.Property<string>("TypesId")
                        .HasColumnType("text");

                    b.HasKey("PokemonsId", "TypesId");

                    b.HasIndex("TypesId");

                    b.ToTable("PokemonPokemonType");
                });

            modelBuilder.Entity("PokemonPokemonAttack", b =>
                {
                    b.HasOne("EventSourcingDemo.Entities.PokemonAttack", null)
                        .WithMany()
                        .HasForeignKey("AttacksId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("EventSourcingDemo.Entities.Pokemon", null)
                        .WithMany()
                        .HasForeignKey("PokemonsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("PokemonPokemonType", b =>
                {
                    b.HasOne("EventSourcingDemo.Entities.Pokemon", null)
                        .WithMany()
                        .HasForeignKey("PokemonsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("EventSourcingDemo.Entities.PokemonType", null)
                        .WithMany()
                        .HasForeignKey("TypesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
